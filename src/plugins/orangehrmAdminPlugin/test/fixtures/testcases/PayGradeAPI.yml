GetValidationRuleForGetOne:
  'valid id':
    params: { id: 1 }
  'negative id':
    params: { id: -1 }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'zero id':
    params: { id: 0 }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'empty id':
    params: { id: '' }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'empty params':
    params: { }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'missing id param':
    params: { val: 1 }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }

GetOne:
  'get one by existing id':
    params: { id: 1 }
    result: { id: 1, name: 'Pay Grade 1', currencies: [{id: 'AUD', name: 'Australian Dollar'}, {id: 'USD', name: 'United States Dollar'}]}
  'get one by non-existing id':
    params: { id: 2910 }
    result: false
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\RecordNotFoundException', message: 'Record Not Found' }

GetValidationRuleForGetAll:
  'empty object as params':
    params: { }
  'unexpected param':
    params: { name: '', city: '', empNumber: '' }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }

GetAll:
  'get all without any filtering':
    params: { }
    result: [{ id: 1, name: 'Pay Grade 1', currencies: [{id: 'AUD', name: 'Australian Dollar'}, {id: 'USD', name: 'United States Dollar'}]}, { id: 2, name: 'Pay Grade 2', currencies: [{id: 'AUD', name: 'Australian Dollar'}]}, { id: 3, name: 'Pay Grade 3', currencies: []} ]
  'get all - sorted by name - descending':
    params: { countryCode: '' , sortField: 'pg.name', sortOrder: 'DESC' }
    result: [{ id: 3, name: 'Pay Grade 3', currencies: []} , { id: 2, name: 'Pay Grade 2', currencies: [{id: 'AUD', name: 'Australian Dollar'}]}, { id: 1, name: 'Pay Grade 1', currencies: [{id: 'AUD', name: 'Australian Dollar'}, {id: 'USD', name: 'United States Dollar'}]}]


GetValidationRuleForCreate:
  'valid params':
    params: { "name": "asdasd"}
  'name missing':
    params: {}
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'invalid name - data type':
    params: { "name": 1}
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'invalid name - length':
    params: { "name": 'asdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasd'}
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }

Create:
  'create successful - 1':
    params: { name: 'Pay Grade 4'}
    result: { id: 4, name: 'Pay Grade 4', currencies: []}

GetValidationRuleForUpdate:
  'valid params':
    params: { id: 1, "name": "asdasd"}
  'id missing':
    params: { "name": "asdasd"}
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }

Update:
  'update successful - 1':
    params: { id: 1, name: 'test paygrade 1'}
    result: { id: 1, name: 'test paygrade 1', currencies: [{id: 'AUD', name: 'Australian Dollar'}, {id: 'USD', name: 'United States Dollar'}]}
  'non existing id':
    params: { id: 25, name: 'test paygrade 2'}
    result: { }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\RecordNotFoundException', message: 'Record Not Found' }

GetValidationRuleForDelete:
  'valid params':
    params: { ids: [ 1, 3 ] }
  'ids missing':
    params: { }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'extra params':
    params: { ids: [ 1, 3 ], extraParams: 'val' }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }
  'non array type':
    params: { ids: '1, 2' }
    exception: { class: 'OrangeHRM\Core\Api\V2\Exception\InvalidParamException', message: 'Invalid Parameter' }

Delete:
  'delete successful - 1':
    params: { ids: [ 1, 3 ] }
    result: { ids: [ 1, 3 ], preCount: 3, postCount: 1 }
  'delete successful - with non existing ids included':
    params: { ids: [ 1, 24, 2 ] }
    result: { ids: [ 1, 24, 2 ], preCount: 3, postCount: 1 }
  'delete successful - single entry':
    params: { ids: [ 2 ] }
    result: { ids: [ 2 ], preCount: 3, postCount: 2 }
  'delete non existing ids':
    params: { ids: [ 25 ] }
    result: { ids: [ 25 ], preCount: 3, postCount: 3 }
  'delete all':
    params: { ids: [ 1, 2, 3] }
    result: { ids: [ 1, 2, 3], preCount: 3, postCount: 0 }
  'delete with empty ids array':
    params: { ids: [ ] }
    result: { ids: [ ], preCount: 3, postCount: 3 }

